# -*- coding: utf-8 -*-
"""
Created on Mon Jan 28 15:23:18 2013
script to create/write/read a small xtc file and test xtcpy module
@author: gmancini
"""

#note: this file is renamed with a "py" extension during make
#and removed during clean with other python files generated by SWIG

#check path for xtcpy module
import socket,sys
host = socket.gethostname()
if host=="wintermute" or host=="magnusthered":
  sys.path.append("/home/gmancini/SNS/SnSDev/script/libxtcpy")
elif host=="neuromancer":
  sys.path.append("/home/gmancini/script/libxtcpy")
else: 
  sys.path.append("/home/gmancini/Work/psdev/devel/intel/script/libxtcpy")

#import & help
from csv import reader
from math import sqrt
from optparse import OptionParser
from subprocess import call
from sys import argv
import numpy as np
import re
import xtcpy

DOWRITE = True
# constants
l = 1.0
dt = 1.0
prec = 1000.0
Nframes = 3
DIM = 3
xtctraj = "test.xtc"

if DOWRITE:
    box = np.array([[l,.0,.0],[.0,l,.0],[.0,.0,l]],dtype=np.float32)   
    ### test trajectory
    FR0 = np.array([[.0,.0,.0],[0.3,.0,.0],[.358,0.082,.0],[.358,-0.082,.0]],dtype=np.float32)
    FR1 = FR0 + .01
    FR2 = FR1 + .01
    traj = [FR0,FR1,FR2]
    
    ### TEST WRITE
    print "--- Opening test.xtc in write mode"
    xdr1 = xtcpy.xdrfile_open(xtctraj, "w")
    print "--- Write frames"
    for frame in xrange(Nframes):
        time = float(frame)*dt
        xtcpy.xtc_writeframe(xdr1,traj[frame],frame,time,prec,box) 
    print "--- Frames written"    
    xtcpy.xdrfile_close(xdr1)
    print "--- test.xtc closed"

### TEST READ
print "--- Checking natoms in read mode"
xtctraj = "test.xtc"
natoms = xtcpy.read_xtcnatoms(xtctraj)
print "--- Atoms in test.xtc: ",natoms
if natoms != 4:
    print "ERROR: wrong number of natoms: should be 4, is ",natoms    
    quit()
else:    
    print "--- Opening test.xtc in read mode" 
    xdr1 = xtcpy.xdrfile_open(xtctraj, "r")

box = np.empty((3,3),dtype=np.float32)
this_frame = np.zeros((natoms,DIM),dtype=np.float32)

print "--- reading frames"
for frame in xrange(Nframes):
    #xtcpy.xtc_readframe(xdr1,natoms,DIM,this_frame,frame,time,prec,box)
    xtcpy.xtc_readframe(xdr1,this_frame,frame,time,prec,box)
    print "--- frame ",frame," time ",time," prec ",prec," box ",box
    print this_frame[:10]
xtcpy.xdrfile_close(xdr1)
print "--- test.xtc closed"
    
quit()
